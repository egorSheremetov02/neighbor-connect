syntax = "proto3";

package chat;

//Service Definition
service ChatService {
  rpc GetChats (GetChatsRequest) returns (ChatsResponse);
  rpc GetMessageHistory (GetMessageHistoryRequest) returns (MessageHistoryResponse);
  rpc ChatEventsStreaming (stream ChatEventRequest) returns (stream ChatEventResponse);
  rpc GetChatInfo (GetChatInfoRequest) returns (ChatInfoResponse);
  rpc CreateChat (CreateChatRequest) returns (ChatResponse);
  rpc EditChat (EditChatRequest) returns (ChatResponse);
  rpc JoinChat (JoinChatRequest) returns (ChatResponse);
  rpc LeaveChat (LeaveChatRequest) returns (ChatResponse);
  rpc ReportChat (ReportChatRequest) returns (ChatResponse);
  rpc DownloadFile (DownloadFileRequest) returns (FileResponse);
  rpc UploadFile (UploadFileRequest) returns (FileResponse);
  rpc VoteInPoll (VoteInPollRequest) returns (PollResponse);
}

message GetChatsRequest {
  int32 user_id = 1;
}

message ChatsResponse {
  repeated Chat chats = 1;
}

message GetMessageHistoryRequest {
  int32 chat_id = 1;
}

message MessageHistoryResponse {
  repeated Message messages = 1;
}

message ChatEventRequest {
  int32 chat_id = 1;
}

message ChatEventResponse {
  ChatEvent event = 1;
}

message GetChatInfoRequest {
  int32 chat_id = 1;
}

message ChatInfoResponse {
  Chat chat = 1;
}

message CreateChatRequest {
  string chat_name = 1;
  string description = 2;
}

message EditChatRequest {
  int32 chat_id = 1;
  string new_chat_name = 2;
  string new_description = 3;
}

message JoinChatRequest {
  int32 user_id = 1;
  int32 chat_id = 2;
}

message LeaveChatRequest {
  int32 user_id = 1;
  int32 chat_id = 2;
}

message ReportChatRequest {
  int32 chat_id = 1;
  string reason = 2;
}

message DownloadFileRequest {
  string file_id = 1;
}

message UploadFileRequest {
  bytes file_content = 1;
  string file_name = 2;
}

message VoteInPollRequest {
  int32 poll_id = 1;
  int32 option_id = 2;
}

message Chat {
  int32 id = 1;
  string name = 2;
  string description = 3;
  repeated User members = 4;
  repeated Message messages = 5;
  repeated File files = 6;
}

message User {
  int32 id = 1;
  string name = 2;
}

message Message {
  int32 id = 1;
  User user = 2;
  string content = 3;
  int64 timestamp = 4;
}

message File {
  string id = 1;
  string name = 2;
  bytes content = 3;
}

message ChatEvent {
  string type = 1; //Type of event, like "messageSent", "userJoined", etc.
  User user = 2;
  int64 timestamp = 3;
}

message ChatResponse {
  int32 status = 1; //Status code of the response
  string message = 2; //Return message, provides information about the request processing status
  Chat chat = 3;
}

message FileResponse {
  int32 status = 1;
  string message = 2;
  File file = 3;
}

message PollResponse {
  int32 status = 1;
  string message = 2;
  PollResult poll_result = 3;
}

message PollResult {
  repeated PollOptionResult options = 1;
}

message PollOptionResult {
  int32 option_id = 1;
  int32 vote_count = 2;
}