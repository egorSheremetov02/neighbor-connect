syntax = "proto3";

// Proto package
package incident;

// Enum for the type of the incident
enum IncidentType {
    FIRE = 0;
    CRIME = 1;
    MEDICAL = 2;
    TRAFFIC = 3;
    OTHER = 99;
}

// Enum for the severity of the incident
enum Severity {
    LOW = 0;
    MEDIUM = 1;
    HIGH = 2;
    CRITICAL = 3;
}

// Message that contains the geolocation data
message GeoLocation {
    double latitude = 1;
    double longitude = 2;
}  

// Message that represents an incident
message Incident {
    string id = 1;
    string title = 2;
    string description = 3;
    IncidentType type = 4;
    Severity severity = 5;
    GeoLocation location = 6;
    int64 timestamp = 7; // unix timestamp
}

// Offers service
service Offers {
    rpc getLocalOffers (OfferRequest) returns (OfferResponse) {}
}

// Message for getLocatOffers request
message OfferRequest {}

// Message for getLocalOffers response
message OfferResponse {
    repeated string offerIds = 1; 
}

// Map/Incidents service
service MapIncidents {
    rpc getLocalChats (ChatRequest) returns (ChatResponse) {}
    rpc searchChats (ChatSearchRequest) returns (ChatResponse) {}
    rpc getLocalIncidents (IncidentRequest) returns (IncidentResponse) {}
    rpc addIncident (AddIncidentRequest) returns (AddIncidentResponse) {}
    rpc sendIncidentReaction (IncidentReactionRequest) returns (IncidentReactionResponse) {}
}

// Message for getLocalChats request
message ChatRequest {}

// Message for getLocalChats response
message ChatResponse {
    repeated string chatIds = 1;
}

// Message for searchChats request
message ChatSearchRequest {
    string chatName = 1;
}

// Message for getLocalIncidents request
message IncidentRequest {}

// Message for getLocalIncidents response
message IncidentResponse {
    repeated string incidentIds = 1; 
}

// Message for addIncident request
message AddIncidentRequest {
    string userId = 1;
    Incident incident = 2;
}

// Message for addIncident response
message AddIncidentResponse {
    string incidentId = 1;
}

// Message for sendIncidentReaction request
message IncidentReactionRequest {
    string userId = 1;
    int32 reactionId = 2;
}

// Message for sendIncidentReaction response
message IncidentReactionResponse {
    string status = 1;
    string message = 2; 
}





